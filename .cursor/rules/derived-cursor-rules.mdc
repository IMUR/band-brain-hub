---
description: Cursor rules derived by SpecStory from the project AI interaction history
globs: *
---

## PROJECT OVERVIEW
Band Brain Hub is a single-page, mobile-critical web application designed for band members to collaboratively manage events, tasks, notes, finances, and setlists. The application prioritizes rapid deployment, excellent UX/UI, and seamless real-time synchronization. Offline support is crucial. The application is implemented as a single-file application using Svelte 5, TypeScript, and Tailwind CSS, leveraging IndexedDB for persistence and local JSON-like data structures. Authentication is already implemented.

## CODE STYLE
Consistent with standard Svelte/TypeScript best practices. Emphasis on readability and maintainability.

## FOLDER ORGANIZATION
Minimized to a ludicrous degree;  `src/App.svelte` contains the core application logic. Additional files include `package.json`, `vite.config.ts`, `tailwind.config.js`, `postcss.config.js`, `tsconfig.json`, `index.html`, and `src/app.css`.

## TECH STACK
Svelte 5, TypeScript, Tailwind CSS, Font Awesome, uuid, IndexedDB, Vite (build tool), idb, tslib, @tsconfig/svelte, @sveltejs/vite-plugin-svelte, autoprefixer, postcss

## PROJECT-SPECIFIC STANDARDS
- All data is persisted locally using IndexedDB and managed via local JSON-like structures within TypeScript.
- The application is designed as a single-file application for ease of deployment and maintenance (using Vite for development).
- UI should be intuitive for users with varying levels of technical expertise.  The application should maintain a conversational tone in interactions with users.
- Reactive, real-time updates are implemented using Svelte 5 runes.
- Offline support is provided through IndexedDB integration.
- A build tool (Vite) is required for development.


## WORKFLOW & RELEASE RULES
Rapid iterative development and deployment cycles. Prioritize features based on user needs and feedback.

## REFERENCE EXAMPLES
N/A - Single file application.


## PROJECT DOCUMENTATION & CONTEXT SYSTEM
All documentation is embedded within the `app.svelte` file (post-build) through comments and type definitions.

## DEBUGGING
Standard browser developer tools.

## FINAL DOs AND DON'Ts
- **DO** prioritize simplicity and ease of use.
- **DO** ensure the application is mobile-friendly and responsive.
- **DO** maintain a consistent and visually appealing design.
- **DO** use clear and concise language in all interactions.
- **DO** use Vite or a similar build tool for development.
- **DON'T** use external backend services (e.g., Supabase).
- **DON'T** over-engineer solutions; strive for simplicity.